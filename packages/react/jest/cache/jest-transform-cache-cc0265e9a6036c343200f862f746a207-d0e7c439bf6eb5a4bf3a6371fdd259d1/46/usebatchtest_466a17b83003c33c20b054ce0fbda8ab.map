{"file":"/Users/jiangwei/projects/lotips/packages/react/test/use-batch.test.ts","mappings":";;;AAAA,8CAA2C;AAC3C,4DAAyD;AACzD,wCAAsC;AAEtC,IAAI,GAAG,GAAG,CAAC,CAAA;AACX,IAAM,GAAG,GAAG,UAAO,IAAc;;QAC/B,GAAG,IAAI,CAAC,CAAA;QACR,sBAAO,CAAC,CAAC,CAAC,EAAA;;KACX,CAAA;AAED,QAAQ,CAAC,WAAW,EAAE;IACpB,IAAI,CAAC,+BAA+B,EAAE;;;;;oBAC9B,KAAK,GAAG,wBAAU,CAAC,cAAM,OAAA,oBAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,CAAC,EAA/B,CAA+B,CAAC,CAAA;oBACzD,KAAK,GAAG,wBAAU,CAAC,cAAM,OAAA,oBAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,CAAC,EAA/B,CAA+B,CAAC,CAAA;oBACzD,KAAK,GAAG,wBAAU,CAAC,cAAM,OAAA,oBAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,CAAC,EAA/B,CAA+B,CAAC,CAAA;oBACzD,KAAK,GAAG,wBAAU,CAAC,cAAM,OAAA,oBAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,CAAC,EAA/B,CAA+B,CAAC,CAAA;oBACzD,KAAK,GAAG,wBAAU,CAAC,cAAM,OAAA,oBAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,CAAC,EAA/B,CAA+B,CAAC,CAAA;oBAC/D,qBAAM,aAAK,CAAC,IAAI,CAAC,EAAA;;oBAAjB,SAAiB,CAAA;oBACjB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;oBACnB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;oBACpC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;oBACpC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;oBACpC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;oBACpC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;;;;SACrC,EAAE,IAAI,CAAC,CAAA;AACV,CAAC,CAAC,CAAA","names":[],"sources":["/Users/jiangwei/projects/lotips/packages/react/test/use-batch.test.ts"],"sourcesContent":["import { useBatch } from '../src/use-batch'\nimport { renderHook } from '@testing-library/react-hooks'\nimport { delay } from '../utils/delay'\n\nlet cnt = 0\nconst api = async (_ids: string[]) => {\n  cnt += 1\n  return [1]\n}\n\ndescribe('use-batch', () => {\n  test('combined into a batch request', async () => {\n    const hook1 = renderHook(() => useBatch('use-batch', '1', api))\n    const hook2 = renderHook(() => useBatch('use-batch', '1', api))\n    const hook3 = renderHook(() => useBatch('use-batch', '1', api))\n    const hook4 = renderHook(() => useBatch('use-batch', '1', api))\n    const hook5 = renderHook(() => useBatch('use-batch', '1', api))\n    await delay(1000)\n    expect(cnt).toBe(1)\n    expect(hook1.result.current).toBe(1)\n    expect(hook2.result.current).toBe(1)\n    expect(hook3.result.current).toBe(1)\n    expect(hook4.result.current).toBe(1)\n    expect(hook5.result.current).toBe(1)\n  }, 3000)\n})\n"],"version":3}